{
	"name": "dataflow-CustomerDim",
	"properties": {
		"type": "MappingDataFlow",
		"typeProperties": {
			"sources": [
				{
					"dataset": {
						"referenceName": "customer_csv_datalake",
						"type": "DatasetReference"
					},
					"name": "CustomerDimSqlDb"
				},
				{
					"dataset": {
						"referenceName": "ProductDimeSqlDb",
						"type": "DatasetReference"
					},
					"name": "ProductDimSqldb"
				},
				{
					"dataset": {
						"referenceName": "ProductModelSqlDb",
						"type": "DatasetReference"
					},
					"name": "ProductModelSqlDb"
				},
				{
					"dataset": {
						"referenceName": "ProdCategorySqlDb",
						"type": "DatasetReference"
					},
					"name": "ProdCategory"
				},
				{
					"dataset": {
						"referenceName": "CustomerDimPoolDb",
						"type": "DatasetReference"
					},
					"name": "GetMaxCustomerSK"
				}
			],
			"sinks": [
				{
					"dataset": {
						"referenceName": "CustomerDimPoolDb",
						"type": "DatasetReference"
					},
					"name": "CustomerDimPoolDb"
				},
				{
					"dataset": {
						"referenceName": "ProductDimPoolDb",
						"type": "DatasetReference"
					},
					"name": "ProductDimPoolDb"
				},
				{
					"name": "CustomerSKSink"
				}
			],
			"transformations": [
				{
					"name": "ProductJoin"
				},
				{
					"name": "ProductCategoryJoin"
				},
				{
					"name": "selectProductDimCols"
				},
				{
					"name": "ProductSK"
				},
				{
					"name": "selectCustomerDimCols"
				},
				{
					"name": "CustomerSK"
				},
				{
					"name": "derivedColumn1"
				}
			],
			"scriptLines": [
				"source(output(",
				"          CustomerID as string,",
				"          NameStyle as string,",
				"          Title as string,",
				"          FirstName as string,",
				"          MiddleName as string,",
				"          LastName as string,",
				"          Suffix as string,",
				"          CompanyName as string,",
				"          SalesPerson as string,",
				"          EmailAddress as string,",
				"          Phone as string,",
				"          PasswordHash as string,",
				"          PasswordSalt as string,",
				"          rowguid as string",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     ignoreNoFilesFound: false) ~> CustomerDimSqlDb",
				"source(output(",
				"          ProductID as integer,",
				"          Name as string,",
				"          ProductNumber as string,",
				"          Color as string,",
				"          StandardCost as decimal(19,4),",
				"          ListPrice as decimal(19,4),",
				"          Size as string,",
				"          Weight as decimal(8,2),",
				"          ProductCategoryID as integer,",
				"          ProductModelID as integer,",
				"          SellStartDate as timestamp,",
				"          SellEndDate as timestamp,",
				"          DiscontinuedDate as timestamp,",
				"          ThumbNailPhoto as binary,",
				"          ThumbnailPhotoFileName as string,",
				"          rowguid as string,",
				"          ModifiedDate as timestamp",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     isolationLevel: 'READ_UNCOMMITTED',",
				"     format: 'table') ~> ProductDimSqldb",
				"source(output(",
				"          ProductModelID as integer,",
				"          Name as string,",
				"          CatalogDescription as string,",
				"          rowguid as string,",
				"          ModifiedDate as timestamp",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     isolationLevel: 'READ_UNCOMMITTED',",
				"     format: 'table') ~> ProductModelSqlDb",
				"source(output(",
				"          ProductCategoryID as integer,",
				"          ParentProductCategoryID as integer,",
				"          Name as string,",
				"          rowguid as string,",
				"          ModifiedDate as timestamp",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     isolationLevel: 'READ_UNCOMMITTED',",
				"     format: 'table') ~> ProdCategory",
				"source(output(",
				"          CustomerSK as integer",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     isolationLevel: 'READ_UNCOMMITTED',",
				"     query: 'SELECT MAX([CustomerSK]) as CustomerSK FROM [dbo].[DimCustomer]',",
				"     format: 'query',",
				"     staged: true) ~> GetMaxCustomerSK",
				"ProductDimSqldb, ProductModelSqlDb join(ProductDimSqldb@ProductModelID == ProductModelSqlDb@ProductModelID,",
				"     joinType:'left',",
				"     matchType:'exact',",
				"     ignoreSpaces: false,",
				"     broadcast: 'auto')~> ProductJoin",
				"ProductJoin, ProdCategory join(ProductDimSqldb@ProductCategoryID == ProdCategory@ProductCategoryID,",
				"     joinType:'left',",
				"     matchType:'exact',",
				"     ignoreSpaces: false,",
				"     broadcast: 'auto')~> ProductCategoryJoin",
				"ProductCategoryJoin select(mapColumn(",
				"          ProductID,",
				"          ProductName = ProductDimSqldb@Name,",
				"          ProductCategoryID = ProductDimSqldb@ProductCategoryID,",
				"          ProductModelID = ProductDimSqldb@ProductModelID,",
				"          ProductModelName = ProductModelSqlDb@Name,",
				"          ProductCategoryName = ProdCategory@Name",
				"     ),",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> selectProductDimCols",
				"selectProductDimCols keyGenerate(output(ProductSK as long),",
				"     startAt: 1L,",
				"     stepValue: 1L) ~> ProductSK",
				"CustomerDimSqlDb select(mapColumn(",
				"          CustomerID,",
				"          CompanyName,",
				"          SalesPerson",
				"     ),",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> selectCustomerDimCols",
				"selectCustomerDimCols keyGenerate(output(CustomerSK as long),",
				"     startAt: 1L,",
				"     stepValue: 1L) ~> CustomerSK",
				"CustomerSK derive(CustomerSK = CustomerSK + CustomerSKSink#outputs()[1].CustomerSK) ~> derivedColumn1",
				"derivedColumn1 sink(allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     input(",
				"          CustomerSK as integer,",
				"          CustomerID as integer,",
				"          CompanyName as string,",
				"          SalesPerson as string",
				"     ),",
				"     deletable:false,",
				"     insertable:true,",
				"     updateable:false,",
				"     upsertable:false,",
				"     format: 'table',",
				"     staged: true,",
				"     allowCopyCommand: true,",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true,",
				"     errorHandlingOption: 'stopOnFirstError',",
				"     mapColumn(",
				"          CustomerSK,",
				"          CustomerID,",
				"          CompanyName,",
				"          SalesPerson",
				"     )) ~> CustomerDimPoolDb",
				"ProductSK sink(allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     input(",
				"          ProductSK as integer,",
				"          ProductID as integer,",
				"          ProductModelID as integer,",
				"          ProductcategoryID as integer,",
				"          ProductName as string,",
				"          ProductModelName as string,",
				"          ProductCategoryName as string",
				"     ),",
				"     deletable:false,",
				"     insertable:true,",
				"     updateable:false,",
				"     upsertable:false,",
				"     format: 'table',",
				"     staged: true,",
				"     allowCopyCommand: true,",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true,",
				"     errorHandlingOption: 'stopOnFirstError',",
				"     mapColumn(",
				"          ProductSK,",
				"          ProductID,",
				"          ProductModelID,",
				"          ProductcategoryID = ProductCategoryID,",
				"          ProductName,",
				"          ProductModelName,",
				"          ProductCategoryName",
				"     )) ~> ProductDimPoolDb",
				"GetMaxCustomerSK sink(validateSchema: false,",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true,",
				"     store: 'cache',",
				"     format: 'inline',",
				"     output: false,",
				"     saveOrder: 1) ~> CustomerSKSink"
			]
		}
	}
}